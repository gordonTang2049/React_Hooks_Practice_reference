{"ast":null,"code":"var _jsxFileName = \"/home/gordon/workplace/reactApp/usereducer/src/usereducer2.js\";\nimport React, { useReducer, useState } from \"react\"; // function for a set of particular action \n\nfunction reducer2(state, action) {\n  switch (action.type) {\n    case \"add_todo\":\n      return {\n        // the rendered todo list has the action text and compteled status \n        todos: [...state.todos, {\n          text: action.text,\n          completed: false\n        }],\n        todoCount: state.todoCount + 1\n      };\n\n    case \"toggle_todo\":\n      return {\n        // the rendered todo list has the action text and compteled status \n        todos: state.todos.map((t, i) => i === action.i ? { ...t,\n          completed: !t.completed\n        } : t),\n        todoCount: state.todoCount - 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst Usereducer2 = () => {\n  //  dispatch => action  type=\"text\"\n  // control mutiple action and mutiple state \n  // single action map mutiple state\n  const [{\n    todos,\n    todoCount\n  }, dispatch] = useReducer(reducer2, {\n    todos: [],\n    todoCount: 0\n  });\n  const [text, setText] = useState();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault(); // payload => text / payload : text \n\n      dispatch({\n        type: \"add_todo\",\n        text\n      });\n      setText(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: text,\n    onChange: e => setText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, JSON.stringify(todos, null, 2)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"number of todos : \", todoCount), todos.map((t, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    onClick: () => dispatch({\n      type: 'toggle_todo',\n      i\n    }),\n    style: {\n      textDecoration: t.completed ? \"line-through\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  }, \" \", t.text)));\n};\n\nexport default Usereducer2;","map":{"version":3,"sources":["/home/gordon/workplace/reactApp/usereducer/src/usereducer2.js"],"names":["React","useReducer","useState","reducer2","state","action","type","todos","text","completed","todoCount","map","t","i","Usereducer2","dispatch","setText","e","preventDefault","target","value","JSON","stringify","textDecoration"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C,C,CAGA;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAgC;AAE5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,aAAO;AACH;AACAC,QAAAA,KAAK,EAAG,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiB;AAACC,UAAAA,IAAI,EAAEH,MAAM,CAACG,IAAd;AAAoBC,UAAAA,SAAS,EAAG;AAAhC,SAAjB,CAFL;AAGHC,QAAAA,SAAS,EAAEN,KAAK,CAACM,SAAN,GAAkB;AAH1B,OAAP;;AAMJ,SAAK,aAAL;AACI,aAAO;AACH;AACAH,QAAAA,KAAK,EAAGH,KAAK,CAACG,KAAN,CAAYI,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KACxBA,CAAC,KAAKR,MAAM,CAACQ,CAAb,GAAiB,EAAC,GAAGD,CAAJ;AAAOH,UAAAA,SAAS,EAAG,CAACG,CAAC,CAACH;AAAtB,SAAjB,GAAoDG,CAD5C,CAFL;AAIHF,QAAAA,SAAS,EAAEN,KAAK,CAACM,SAAN,GAAkB;AAJ1B,OAAP;;AAMJ;AACI,aAAON,KAAP;AAhBR;AAmBH;;AAGD,MAAMU,WAAW,GAAG,MAAM;AAEtB;AACA;AACA;AACA,QAAM,CAAC;AAACP,IAAAA,KAAD;AAAQG,IAAAA;AAAR,GAAD,EAAqBK,QAArB,IAAiCd,UAAU,CAACE,QAAD,EAAW;AACxDI,IAAAA,KAAK,EAAG,EADgD;AAExDG,IAAAA,SAAS,EAAE;AAF6C,GAAX,CAAjD;AAIA,QAAM,CAACF,IAAD,EAAOQ,OAAP,IAAkBd,QAAQ,EAAhC;AAEA,sBACI,uDACI;AACI,IAAA,QAAQ,EAAEe,CAAC,IAAG;AACdA,MAAAA,CAAC,CAACC,cAAF,GADc,CAEd;;AACAH,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAG,UAAT;AAAqBE,QAAAA;AAArB,OAAD,CAAR;AACAQ,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAO,IAAA,KAAK,EAAER,IAAd;AAAoB,IAAA,QAAQ,EAAES,CAAC,IAAID,OAAO,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAef,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAZJ,eAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwBG,SAAxB,CAdA,EAiBKH,KAAK,CAACI,GAAN,CACS,CAACC,CAAD,EAAIC,CAAJ,kBACA;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,OAAO,EAAE,MAAKE,QAAQ,CAAC;AAACT,MAAAA,IAAI,EAAE,aAAP;AAAsBO,MAAAA;AAAtB,KAAD,CAAnC;AACA,IAAA,KAAK,EAAE;AAACU,MAAAA,cAAc,EAAEX,CAAC,CAACH,SAAF,GAAc,cAAd,GAA+B;AAAhD,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEGG,CAAC,CAACJ,IAFL,CAFT,CAjBL,CADJ;AA8BH,CAzCD;;AA4CA,eAAeM,WAAf","sourcesContent":["import React, {useReducer, useState} from \"react\"\n\n\n// function for a set of particular action \nfunction reducer2(state, action){\n\n    switch(action.type){\n        case \"add_todo\":\n            return { \n                // the rendered todo list has the action text and compteled status \n                todos : [...state.todos, {text: action.text, completed : false}],\n                todoCount: state.todoCount + 1\n\n            }\n        case \"toggle_todo\":\n            return { \n                // the rendered todo list has the action text and compteled status \n                todos : state.todos.map((t, i) => \n                i === action.i ? {...t, completed : !t.completed} : t ),\n                todoCount: state.todoCount - 1\n            }\n        default:\n            return state\n    }\n\n}\n\n\nconst Usereducer2 = () => {\n\n    //  dispatch => action  type=\"text\"\n    // control mutiple action and mutiple state \n    // single action map mutiple state\n    const [{todos, todoCount}, dispatch] = useReducer(reducer2, {\n        todos : [], \n        todoCount: 0 \n    })\n    const [text, setText] = useState()\n\n    return (\n        <>\n            <form \n                onSubmit={e =>{\n                e.preventDefault()\n                // payload => text / payload : text \n                dispatch({ type : \"add_todo\", text })\n                setText(\"\")\n            }}>\n                <input value={text} onChange={e => setText(e.target.value)} />\n\n            </form>\n\n            <pre>{JSON.stringify(todos, null, 2 )}</pre>\n            \n        <div>number of todos : {todoCount}</div>\n\n{/* use bracket */}\n            {todos.map(\n                      (t, i) => (\n                      <div key={i} onClick={()=> dispatch({type: 'toggle_todo', i})}\n                      style={{textDecoration: t.completed ? \"line-through\" : \"\" }}\n                      > {t.text}</div>\n                      )\n             )}\n\n        \n        </>\n    )\n\n}\n\n\nexport default Usereducer2;"]},"metadata":{},"sourceType":"module"}